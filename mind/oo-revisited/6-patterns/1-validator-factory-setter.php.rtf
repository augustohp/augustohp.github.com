{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf600
{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;\f1\fmodern\fcharset0 CourierNewPS-BoldMT;}
{\colortbl;\red255\green255\blue255;\red85\green85\blue85;\red46\green139\blue87;\red103\green103\blue103;
\red105\green105\blue105;\red0\green0\blue143;}
{\*\expandedcolortbl;\csgray\c100000;\csgenericrgb\c33333\c33333\c33333;\csgenericrgb\c18039\c54510\c34118;\csgenericrgb\c40392\c40392\c40392;
\csgenericrgb\c41176\c41176\c41176;\csgenericrgb\c0\c0\c56078;}
\paperw11900\paperh16840\margl1134\margr1134\margb1134\margt1134\vieww11680\viewh16500\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs20 \cf2    8 
\f1\b \cf3 class
\f0\b0 \cf0  Validator 
\f1\b \cf3 extends
\f0\b0 \cf0  AllOf \cf4 \{\cf0 \
\cf2    9 \cf0     
\f1\b \cf3 protected static
\f0\b0 \cf0  
\f1\b \cf5 $factory
\f0\b0 \cf4 ;\cf0 \
\cf2   10 \cf0 \
\cf2   11 \cf0     
\f1\b \cf3 protected static function
\f0\b0 \cf0  \cf6 getFactory\cf4 () \{\cf0 \
\cf2   12 \cf0         
\f1\b \cf3 if
\f0\b0 \cf0  \cf4 (!
\f1\b \cf3 static
\f0\b0 \cf4 ::
\f1\b \cf5 $factory
\f0\b0 \cf0  
\f1\b \cf3 instanceof
\f0\b0 \cf0  Factory\cf4 ) \{\cf0 \
\cf2   13 \cf0             
\f1\b \cf3 static
\f0\b0 \cf4 ::
\f1\b \cf5 $factory
\f0\b0 \cf0  \cf4 =\cf0  
\f1\b \cf3 new
\f0\b0 \cf0  \cf6 Factory\cf4 ();\cf0 \
\cf2   14 \cf0         \cf4 \}\cf0 \
\cf2   15 \cf0 \
\cf2   16 \cf0         
\f1\b \cf3 return static
\f0\b0 \cf4 ::
\f1\b \cf5 $factory
\f0\b0 \cf4 ;\cf0 \
\cf2   17 \cf0     \cf4 \}\cf0 \
\cf2   18 \cf0 \
\cf2   19 \cf0     
\f1\b \cf3 public static function
\f0\b0 \cf0  \cf6 setFactory\cf4 (
\f1\b \cf5 $factory
\f0\b0 \cf4 ) \{\cf0 \
\cf2   20 \cf0         
\f1\b \cf3 static
\f0\b0 \cf4 ::
\f1\b \cf5 $factory
\f0\b0 \cf0  \cf4 =\cf0  
\f1\b \cf5 $factory
\f0\b0 \cf4 ;\cf0 \
\cf2   21 \cf0     \cf4 \}\cf0 \
\cf2   22 \cf0 \
\cf2   23 \cf0     
\f1\b \cf3 public static function
\f0\b0 \cf0  \cf6 with\cf4 (
\f1\b \cf5 $rulePrefix
\f0\b0 \cf4 ,\cf0  
\f1\b \cf5 $prepend
\f0\b0 \cf0  \cf4 =\cf0  
\f1\b \cf3 false
\f0\b0 \cf4 ) \{\cf0 \
\cf2   24 \cf0         
\f1\b \cf3 if
\f0\b0 \cf0  \cf4 (
\f1\b \cf3 false
\f0\b0 \cf0  \cf4 ===\cf0  
\f1\b \cf5 $prepend
\f0\b0 \cf4 ) \{\cf0 \
\cf2   25 \cf0             self\cf4 ::\cf6 getFactory\cf4 ()->\cf6 appendRulePrefix\cf4 (
\f1\b \cf5 $rulePrefix
\f0\b0 \cf4 );\cf0 \
\cf2   26 \cf0         \cf4 \}\cf0  
\f1\b \cf3 else
\f0\b0 \cf0  \cf4 \{\cf0 \
\cf2   27 \cf0             self\cf4 ::\cf6 getFactory\cf4 ()->\cf6 prependRulePrefix\cf4 (
\f1\b \cf5 $rulePrefix
\f0\b0 \cf4 );\cf0 \
\cf2   28 \cf0         \cf4 \}\cf0 \
\cf2   29 \cf0     \cf4 \}\cf0 \
\cf2   30 \cf0 \
\cf2   31 \cf0     
\f1\b \cf3 public static function
\f0\b0 \cf0  \cf6 buildRule\cf4 (
\f1\b \cf5 $ruleSpec
\f0\b0 \cf4 ,\cf0  
\f1\b \cf5 $arguments
\f0\b0 \cf0  \cf4 = []) \{\cf0 \
\cf2   32 \cf0         
\f1\b \cf3 try
\f0\b0 \cf0  \cf4 \{\cf0 \
\cf2   33 \cf0             
\f1\b \cf3 return static
\f0\b0 \cf4 ::\cf6 getFactory\cf4 ()->\cf6 rule\cf4 (
\f1\b \cf5 $ruleSpec
\f0\b0 \cf4 ,\cf0  
\f1\b \cf5 $arguments
\f0\b0 \cf4 );\cf0 \
\cf2   34 \cf0         \cf4 \}\cf0  
\f1\b \cf3 catch
\f0\b0 \cf0  \cf4 (\cf0 \\Exception 
\f1\b \cf5 $exception
\f0\b0 \cf4 ) \{\cf0 \
\cf2   35 \cf0             
\f1\b \cf3 throw new
\f0\b0 \cf0  \cf6 ComponentException\cf4 (\cf0 \
\cf2   36 \cf0                 
\f1\b \cf5 $exception
\f0\b0 \cf4 ->\cf6 getMessage\cf4 (),\cf0 \
\cf2   37 \cf0                 
\f1\b \cf5 $exception
\f0\b0 \cf4 ->\cf6 getCode\cf4 (),\cf0 \
\cf2   38 \cf0                 
\f1\b \cf5 $exception
\f0\b0 \cf0 \
\cf2   39 \cf0             \cf4 );\cf0 \
\cf2   40 \cf0         \cf4 \}\cf0 \
\cf2   41 \cf0     \cf4 \}\cf0 \
\cf2   42 \cf4 \}\cf0 \
}