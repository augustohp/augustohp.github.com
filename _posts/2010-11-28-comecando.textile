---
layout: post
title: Você é um programador?
date: 2010-11-28
category: PHP
---

Senhores, senhoras e coisas: uni-vos. Você se preocupa com sua carreira? Com seu conhecimento? Ou mudando um pouco a pergunta: Você quer ganhar cada vez mais dinheiro nessa carreira?

Óbvio que sim. Acredite. Ganhar mais não depende do seu tempo de experiência. Ok, ele influi; mas pouco. Corra atrás da sua carreira, invista em você e lembre-se desses 3 pontos sempre!

h2. Leia

Existem dois grupos de programadores:

* Os que acreditam que existe o código mágico. Tal trecho de código faz mágica e só um animal de outro planeta vai enteder isso;
* Os que vêem e tentam imaginar que algoritimos ele utilizou para fazer aquilo. Se nem imaginar como ele fez for possível, tenha certeza que essas pessoas vão procurar saber meios de se fazer aquilo;

O recado é simples: não acredite em mágica. Papai Noel não existe, só a fada do dente e ela é extremamente tímida e bipolar. Pra isso, leia! Leia muito! E não torça o nariz agora, mas vou te contar uma verdade: livros técnicos traduzidos, normalmente são uma merda. Aprenda inglês.

Realmente domine e tenha controle sobre seu conhecimento. Você sabe qual versão do PHP usa e as diferenças entre cada uma? Você consegue definir o "porquê" de todos os bugs que encontrou ou algum foi magicamente resolvido? Pense nisso.

Livros e sites que você deveria ler e ler e ler e ler de novo:

* "PHP.net":http://www.php.net
* "PHPDeveloper":http://www.phpdeveloper.org

* PHP Objetos Padrões e Prática - Matt Zandstra
* PHP Power Programming - Derick Rethans, Andi Gutmans, (Nunca lembro o nome desse terceiro)
* Guide to Date & Time Programming - Derick Rethans
* Enterprise Patterns - Gang of Four
* Essential PHP Security - Cris Shiflett

h2. Pratique

Não existe nada no mundo que substitua a experiência. Por isso, pratique. Faça a mesma coisa milhares de vezes. Refaça mais algumas centenas. Crie ou teste coisas novas com frequência. Distribua seu código, deixe os outros verem e quem sabe até utilizarem.

Agora como você pode adquirir experiência? A resposta óbvia é: trabalhando. Intergindo com pessoas do meio, outros profissionais. Além de trabalhar na área, você pode também participar de eventos. Você realmente acha que um bom profissional vai a um evento só pra assistir as palestras? Acredite, se isso for um motivo pra ele ir a algum evento, isso não passa de 50% da razão dele. Conhecer pessoas, trocar experiências de projetos, perguntar, ver o que elas tem a falar faz você realmente evoluir alguns (muitos) meses em apenas dias.

Outra forma são os projetos open source. Existem milhares deles por aí escritos em PHP, mas e como você pode contribuir? Simples, todos eles possuem um sistema de ticket, vá lá e tente resolver algum. É muito mais fácil do que você imagina e muito mais gratificante do que você jamais poderá imaginar. Exergar isso como "trabalhar de graça" é ridículo. Você está tendo a experiência e interagindo (normalmente) com pessoas muito melhores que você.

Você já tentou uma implementação MVC? Já viu como funciona um Active Record? Já implementou um Unity of Work? Já sofreu e xingou o mundo por causa do Late Static Binding? Pois é ....

Mais uma vez: experiência. Nada substitui isso. Não tem como comprar, como fingir ou até mesmo trapacear. Experiência é experiência.

h3. Ame os erros

Eu ia colocar outra coisa aqui, mas isso vale a pena ser ressaltado: ame os erros. Não tenha medo deles, tenha medo do contrário. Quando tudo funciona, ou aparentemente funciona.

Um erro ou um apenas uma simples notificação, quer te dizer de alguma coisa. Se alguém criou aquele erro ou uma simples mensagem de notificação, era porque ela merecia ser notada não pra ser ignorada. Pense que isso foi feito pensando em você e não no usuário, afinal ele espera que tudo (simplesmente) funcione.

Então pare de ignorar erros tanto da sua aplicação quanto do PHP. Vá entender porque eles foram gerados ou simplesmente aceite eles e comece e evitá-los. Ignorar? Eu não vou me alongar aqui, mas acredite: você vai se ferrar fazendo isso.